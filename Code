import tkinter as tk

class TicTacToe:
    def __init__(self):
        self.window=tk.Tk()
        self.window.title("Tic Tac Toe")
        self.current_player="X"
        self.grid=[["","",""],["","",""],["","",""]]

        self.button=[]
        for i in range(3):
            row=[]
            for j in range(3):
                button=tk.Button(self.window,text="",width=20,height=10,command=lambda i=i,j=j:self.make_move(i,j))
                button.grid(row=i,column=j)
                row.append(button)
            self.button.append(row)


    def make_move(self,row,col):
        if self.grid[row][col]=="":
             self.grid[row][col]=self.current_player
             self.button[row][col].config(text=self.current_player,fg="Blue",bg="lightblue")
             if self.check_winner(self.current_player):
                 self.show_custom_message(f"The winner is {self.current_player}", "Game Over", quit_after=True)
             elif self.is_draw():
                self.show_custom_message("It's a Draw", "Game Over", quit_after=True)
             self.current_player="O" if self.current_player=="X" else "X"


    def check_winner(self,player):
        for i in range(3):
            if player==self.grid[i][0]==self.grid[i][1]==self.grid[i][2]:
                return True
            if player==self.grid[0][i]==self.grid[1][i]==self.grid[2][i]:
                return True
        if player==self.grid[0][0]==self.grid[1][1]==self.grid[2][2]:
                return True
        if player==self.grid[0][2]==self.grid[1][1]==self.grid[2][0]:
                return True
        return False
    
    def is_draw(self):
        for r in self.grid:
            for c in r:
                if c =="":
                    return False
        return True
    
    def show_custom_message(self, message, title, quit_after=False):
        # Create a new top-level window as a custom message box
        message_window = tk.Toplevel(self.window)
        message_window.title(title)
        message_window.geometry("300x150")
        message_window.config(bg="lightgray")

        # Create and style the label to display the message
        label = tk.Label(message_window, text=message, font=("Helvetica", 14, "bold"), fg="darkblue", bg="lightgray")
        label.pack(pady=20)

        # Function to handle the OK button press
        def on_ok():
            message_window.destroy()
            if quit_after:
                self.window.quit()

        # Create an OK button to close the window and quit if necessary
        ok_button = tk.Button(message_window, text="OK", font=("Arial", 12), command=on_ok, bg="blue", fg="white")
        ok_button.pack(pady=20)

    def run(self):
        self.window.mainloop()


game=TicTacToe()
game.run()
